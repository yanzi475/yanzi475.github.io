 # 数组的方法 #

 最近参加面试，遇到一些平时不怎么注意的问题

## 数组赋值的异同 ##

为了解除引用关系复制对象或者数组，如果是浅层的数组或对象(也就是数组中不包含对象或数组)，可以通过slice或者concat方法直接实现。先看几个简单的例子。



        var arr1 = [1, 2, 3];
        var arr2 = arr1.concat();
        arr1[0] = 0;
        console.log(arr1); //[0,2,3]
        console.log(arr2); //[1,2,3]

    
        var arr1 = [1, 2, 3];
        var arr2 = arr1.slice(0);
        arr1[0] = 0;
        console.log(arr1); //[0,2,3]
        console.log(arr2); //[1,2,3]
        
        
        var arr1 = [1, 2, 3];
        var arr2 = arr1
        arr1[0] = 0;
        console.log(arr1); //[0,2,3]
        console.log(arr2); //[0,2,3]
        
        var arr3 = [0,2,3]
        arr1 == arr3  //false
        arr1 == arr2  //true
        
以上的代码就很好的阐述了问题，其实，数组的赋值是引用，指向的是同一个对象，数组中的方法concat ，slice 方法不会修改原数组。

## 字符串重复的次数 ##

js判断字符串中出现次数最多的字符 并统计出现次数。


        var str = “abcdefgaaaaaaddda”;
        var obj = {};
        var arr = [];
        var letter;
        for(var i = 0,len = str.length;i<len;i++){
        letter = str[i];
        if(!obj[letter]){
        obj[letter] = 1;
        }else{
        obj[letter]++;
        }
        }
        var max_key,max_num=0;
        for(key in obj){
        if(max_num <obj[key]){
        max_num = obj[key];
        max_key = key;
        }
        }
        document.write(“字母：”+max_key+”　次数：”+max_num);

    
 
