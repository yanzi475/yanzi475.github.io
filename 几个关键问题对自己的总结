
最近一直在写业务代码。作为一个对自己要更高要求的搬砖少年，发出来这几个问题，来对自己总结一下。

##页面变量##
拿到一个页面，这个页面都需要那些变量，全局变量，局部变量，还要考虑到页面的一些效果，是否需要缓存，和另外的一些插件。而这些缓存插件的显示
是否需要变量来控制。

##内存管理##
缓存的话localStorage和sessionStorage的使用，以及页面的内存变量cache,如何管理和缓存变量来减少接口调用的次数，提升页面的加载速度，特别是
loading 的白屏，其中服务器端渲染也可以提升。
  
##函数间的调用与回调##
函数间的调用注意参数，返回数据data.回调函数的处理，一般是对拿到数据的处理，针对一些业务处理数据。
当然，前端数据的校验的函数的回调，以及错误信息的展示。

##对象间的通讯##
拿到一个页面，可以想到有几个对象，对象间如何通过属性，事件来通讯。


##页面的调用顺序##
这个是和业务是有很大的关联，所以页面直接的耦合，内聚属性。还有就是模块可以走不同的流程，所以有时页面有很多的入口，这时就要考虑从不同的
入出到某个页面，域名是否发生变化，页面间变量的传递是否准确。还有业务要求的埋点来区分不同场景。

补充一下程序员的自我修养。

* 勇于研究自己不懂的代码
* 精通代码的调试
* 善用提高效率的工具

遇到问题，研究代码是最好的进步方式。好的代码不是一遍就写好的。要明白你的代码可能的问题，也就是bug 的存在，其实我们所说的处理生产问题，就要快速定位问题，得益于代码的调试。
这个也有经验的积累。资深的程序员看到问题，大概就知道问题在哪，也是他们处理过的问题足够多。在工作中合理安排时间，提高效率真的很重要。
这是对自己上一阶段的总结，祝福自己去迎接bigger challenge.
