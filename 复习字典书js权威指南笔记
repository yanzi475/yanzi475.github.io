##变量##
*类型
*值
js 中的运算符做的一些类型转换，+运算符的一个操作数是字符串，会把另一个操作数转换为字符串，一元“+”运算符将其操作数转换为数字，一元“！”将其操作数转换为布尔值并取反。
  var n ="123"+4  //"1234"
  +n            // 1234
  !n            // false
  
###属性访问###
查询一个不存在的属性并不会报错，而是返回undefined;但是对象不存在，再试图访问这个不存在的对象的属性就会报错，
因为null和undefined 都没有属性。因此，在我们的程序中赋值和判断时是一种常用的写法如下：

var len = book && book.subtitle && book.subtitle.length；
var data = sessionStory.getValue("PARAMS")|| {};

序列化对象
我们现在一般都是面向接口编程，在调用接口时，就要把对象转换为字符串，JSON.stringify()和JSON.parse()就是序列化和还原JavaScript对象的。

### this ###
方法调用和函数调用的一个重要区别是*调用上下文*。属性访问表达式由两部分组成，对象和属性名称，在方法调用表达式里，对象成为调用上下文，函数体可以使用关键字this来引用该对象（7.5
10）。如果嵌套函数作为方法调用，this的值指向调用它的对象。如果嵌套函数作为函数调用，this值不是全局对象（非严格模式下）就是undefined（严格模式下）。







