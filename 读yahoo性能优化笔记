 # 性能优化 #

很早就听前辈们说过yahoo提出的响当当的35条性能优化准则，之前只是大致看下，也就是看下。目前要针对项目做些优化。重新拜读下大神们的杰作。以下是自己的一些笔记。

## 高性能网站建设指南 ##

* 减少http请求
* 使用内容发布网络CDN
* 添加Expires头
* 压缩组件
* 将样式表放在顶部
* 将脚本放在底部
* 避免CSS表达式
* 使用外部JavaScript 和css
* 减少DNS查找
* 精简javascript
* 避免重定向
* 移除重复脚本
* 配置ETag
* 使Ajax 可缓存


### 总结一###


性能黄金法则：只有10%-20%的用户响应时间花在下载HTML文档上，其余80%-90%时间花在下载页面中的所有组件（图片，脚本，样式表，flash等）进行的http请求上。
所以减少http请求的手段是使用图片地图<map>和css sprites 合并图片，以及合并脚本和样式来减少http请求。
使用内容分发网络CDN目的是缩短http请求响应的时间。
添加Expires浏览器和代理使用缓存来减少http请求的数量，页面加载更快。http1.1 中cache-control使用max-age 指定组件被缓存多久，克服了Expires 使用绝对时间要求服务器和客户端要同步。 
使用gzip来编码来压缩http响应包，减少http响应的大小来减少网络响应时间。http1.1中的Accept-Encoding:gzip;deflate
将样式表放在head 标签中，将脚本js文件放底部，如果位置放反会阻碍网页逐步加载，会导致白屏和无样式内容闪烁的现象。样式表放head中，能首先下载它们而不会阻止页面呈现，使用脚本时，对应
所有位于脚本一下的内容，能逐步呈现都阻塞了。所以，将脚本放在页面越靠下的地方，越多的内容能够逐步地呈现。
Keep-Alive 可以重用现有的连接，减少域名两种方式减少DNS查找。 
精简JavaScript 的方式：混淆。 精简JavaScript 代码最流行的工具是Jasmin

黑体**bind,live,delegate,on**

## 高性能网站建进阶设指南 ##

###总结二  ###

高效JavaScript中 使用局部变量可以快速查找，因为是在当前活动作用域中，要查找的作用域链短。
条件流程的判断，if 中出现频率高的条件先判断。多个条件用switch,超过10个可以使用数组，这种情况下一个条件对应的是一个单一值，不是一系列的操作。
循环的优化，判断条件使用局部变量保存，循环变量递减到0.
字符串的优化，字符串的连接+运算符可以使用数组的join方法代替。
   	var data = [],
   	i = 0;
   	data[i++] = "hello";
   	data[i++] = " ";
   	data[i++] = "world";
   	var text = data.join("");
  

		   
    
    
    
