 #事件委托#

 先以一个问题：绑定点击事件的方式有那些呢？熟练Jquery的脑袋中估计已经冒出很多答案了-on,live,bind,delegate当然还有他们的解绑方式-off,die,unbind,undelegate。
 如何是不要依赖任何的库呢，那么原生的js中是如何做的呢，答案也很容易，把点击事件函数赋值给onclick属性，addEventListener()当然考虑到兼容性的话，IE下的attachEvent()。
 如果要是绑定多个事件呢，当然依次绑定太麻烦，那么事件委托的来了。事件的三个阶段是：事件捕获阶段，目标阶段和事件冒泡阶段。而事件委托正是利用
 事件冒泡，在父元素上指定一个事件处理程序，就可以管理下面所有的这一类的事件。这是其一，还能提高性能和动态绑定。好，下面就简单说说。

## 如何实现事件委托 ##

就以之前的例子，我们对一组列表进行事件绑定，我们可以用一个函数或者统一的事件处理器进行事件响应。此时，我们就对这组按钮进循环绑定事件。

    var lists = document.getElementById('pro');
    lists.addEventListener("click",function(event){
      var e = event ||window.event;
      var target = e.target || e.srcElemet;
      switch(target.id){
        case 'id1':
          location.href="";
          break;
        case 'id2':
          location.href="";
          break;
        default:break;
      }
        
    },false);


以上思想就是在DOM结构的最外层元素上指定事件处理程序，可以针对不同元素的相应的做不同的逻辑处理。减少了DOM操作的次数，提高了性能。还有之前说的动态绑定，其实这个场景经常会遇到例如，根据关键字查询，通常，
我们输入一个关键字，然后给输入框绑定事件，查询接口，然后下拉框中出现所匹配的内容，这个下拉框中元素的点击事件，就是利用事件委托，动态绑定事件。

当然，上述方式只是w3c的方式，还可以兼容ie 的attachEvent的方式，以及选择合适的事件属性onclick等。

## jquery几种经典方案 ##



文章刚开始说的jquery 的几种方式，目前对于我来说，用的最多的是on ,但是，学习我们要知其然，还要知其所以然。那这几种方式方式有神马区别吗？
别急，听我一一道来。

首先，bind是把监听器绑定到目标元素target 或者IE下的srcElement上的，有一个绑一个，也就是说不能动态绑定。所以在页面上的元素不会动态添加的时候使用它没什么问题。但如果要动态增加，之前添加的事件是不会作用在新元素上的，必须再bind一次才行。

事件委托是利用了事件的冒泡，那么就很容易理解live  和 delegate 。live 会一直冒泡到文档的根结点document元素，delegate 只会冒泡到注册事件处理程序的元素，一般是父元素节点，所以delegate比live性能要好，并且live函数在jquery 1.7版本之后已经去去掉。on 是推荐的方式，并且可以用on来实现其他几种方式，看过源码就会知道，其他方式的内部是有on来实现的。

说到这里，应该明白了，我写到这里感觉用重新认识了下事件绑定。好了，就到这里了。以上纯属个人理解，不当之处请指正。后续我准备把21天读书计划的笔记和工作总结都搬过来，请大神们多指导哈。
